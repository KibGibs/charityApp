<?php

class DonationController extends BaseController {


	public function getIndex(){
		if(Auth::user()->isDonor()) {
			$donation = Donation::where('user_id', Auth::user()->id)->paginate(10);
		}else{
			$donation = Donation::paginate(10);
		}
		
		foreach($donation as $k=>$v) {
			$v->user = User::find($v->user_id);
		}
		
		$data = array(
			'donation' => $donation,
		);
		return View::make('donation', $data);
	}
	
	public function donate() {
		$data = array(
			'program' => Program::all(),
		);
		return View::make('donate', $data);
	}
	
	public function postDonate() {
		$amount = Input::get('amount');
		$date = Input::get('date');
		$remarks = Input::get('remarks');

		$donation = new Donation;
		$donation->donated_amount = $amount;
		$donation->user_id = Auth::user()->id;
		$donation->donation_date = date('Y-m-d');
		$donation->remarks = $remarks;
		if($donation->save()){
			return Redirect::action('DonationController@getIndex')->with('success','Donation Added!');
		}
	}
	
	public function donationDetail($id) {
		$donation = DonationDetail::where('donation_id', $id)->get();
		foreach($donation as $k=>$v) {
			$v->activity = Activity::find($v->activity_id);
		}
		
		$data = array(
			'activity' => Activity::all(),
			'donation_detail' => $donation,
			'id' => $id,
		);
		return View::make('donate_detail', $data);
	}
	
	public function postDonateDetail(){
		$id = Input::get('id');
		$activity = Input::get('activity');
		$hasDetail = DonationDetail::where('donation_id', $id)->where('activity_id', $activity)->get();
		
		
		if($hasDetail->count() > 0) {
			return Redirect::action('DonationController@donationDetail',['donate'=>$id ])->with('Error','Activity Already Added!');
		}else{
		
			$donation_detail = new DonationDetail;
			$donation_detail->donation_id = $id;
			$donation_detail->activity_id = $activity;
			if($donation_detail->save()){
				return Redirect::action('DonationController@donationDetail',['donate'=>$id ])->with('success','Donation Detail Added!');
			}
		}
	}
	
	public function deleteDetail($donate, $detail) {
		$donation_detail = DonationDetail::find($detail);
		if($donation_detail) {
			if($donation_detail->delete()) {
				return Redirect::action('DonationController@donationDetail',['donate'=>$donate ])->with('success','Donation Detail Deleted!');
			}	
		}
	}
	
	public function donateViaPaypal() {
		
		$data = array(
			'program' => Program::all(),
		);
		return View::make('donate_paypal', $data);
	
	}
	
	public function paypalDonate() {
		
		$amount = floatval(Input::get('amount'));
		$date = date('Y-m-d');
		$remarks = Input::get('remarks');
		$data = [
			'amount' => $amount,
			'date' => $date,
		];
		$params = [
			'amount' => $amount,
			'date' => $date,
			'description' => 'Donation',
			'currency' => 'PHP',
			'returnUrl' => URL::action('DonationController@paypalReturn', ['amount' => $amount, 'date' => $date, 'remarks' => $remarks]),
			'cancelUrl' => URL::action('DonationController@paypalCancel'),
		];
		
		Session::push('paypal.send.params',$params);
		$response = Omnipay::purchase($params)->send();
		
		$response->getTransactionReference(); // a reference generated by the payment gateway
		$response->getMessage(); // a message generated by the payment gateway
		
		if($response->isSuccessful()){
			return 'Suc';
		}elseif($response->isRedirect()){
			$response->redirect();
		}else{
			exit($response->getMessage());
		}

	}
	
	public function paypalReturn($amount, $date, $remarks) {
		$params = [
			'amount' => floatval($amount),
			'date' => $date,
			'description' => 'Donation',
			'currency' => 'PHP',
			'returnUrl' => URL::action('DonationController@paypalReturn', ['amount' => $amount, 'date' => $date]),
			'cancelUrl' => URL::action('DonationController@paypalCancel'),
		];
		$response = Omnipay::completePurchase($params)->send();
		$paypalResponse = $response->getData();
		
		if(isset($paypalResponse['PAYMENTINFO_0_ACK']) && $paypalResponse['PAYMENTINFO_0_ACK'] === 'Success') { 
				$donation = new Donation;
				$donation->donated_amount = $paypalResponse['PAYMENTINFO_0_AMT'];
				$donation->user_id = Auth::user()->id;
				$donation->donation_date = $params['date'];
				$donation->remarks = $remarks; //$paypalResponse['PAYMENTINFO_0_TRANSACTIONID'];
				$donation->paypal_transaction_id = $paypalResponse['PAYMENTINFO_0_TRANSACTIONID'];
				if($donation->save()){
					return Redirect::action('DonationController@getIndex')->with('success','Donation on Paypal Success');
				}
				
		} else { 
			return Redirect::action('DonationController@getIndex')->with('error','Donation on Paypal Failed');
		}
		
	}
	
	public function paypalCancel() {
		return Redirect::action('DonationController@getIndex');
	}
	
	public function received($id) {
		$donation = Donation::find($id);
		
		if($donation) {
			if($donation->status == 0) {
				$donation->status = 1;
			}else{
				$donation->status =0;
			}
		}
		$donation->save();
		return Redirect::action('DonationController@getIndex')->with('success','Donation Received');
	}


}
